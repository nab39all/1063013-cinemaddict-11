{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/abstract-component.js","webpack:///./src/components/film-card-container.js","webpack:///./src/components/film-card.js","webpack:///./src/components/film-details-popup.js","webpack:///./src/components/film-list.js","webpack:///./src/components/footer-statistic.js","webpack:///./src/components/header-profile.js","webpack:///./src/components/main-menu.js","webpack:///./src/components/no-films.js","webpack:///./src/components/show-more-btn.js","webpack:///./src/components/sort.js","webpack:///./src/components/statistic.js","webpack:///./src/controllers/page-controller.js","webpack:///./src/main.js","webpack:///./src/mock/comment.js","webpack:///./src/mock/film-card.js","webpack:///./src/utils/common.js","webpack:///./src/utils/consts.js","webpack:///./src/utils/render.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAA8C;;AAE/B;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,mEAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;;AAEe,gCAAgC,2DAAiB;;AAEhE;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAqD;AACN;;AAE/C;AACA;;AAEA;AACA,SAAS,8GAA8G;AACvH;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,MAAM;AAC3C,qCAAqC,OAAO;AAC5C;AACA,wCAAwC,sBAAsB;AAC9D,4CAA4C,oEAAc,WAAW;AACrE,yCAAyC,mBAAmB;AAC5D;AACA,mCAAmC,OAAO;AAC1C,0CAA0C;AAC1C,iFAAiF;AACjF,uCAAuC,gBAAgB;AACvD;AACA,oGAAoG,uBAAuB;AAC3H,mGAAmG,qBAAqB;AACxH,4FAA4F,sBAAsB;AAClH;AACA;AACA;AACA;;AAEe,uBAAuB,2DAAiB;AACvD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AAAqD;AACN;;AAE/C;AACA,SAAS;AACT,sDAAsD;AACtD;AACA;AACA,mBAAmB,mBAAmB;AACtC,yEAAyE,UAAU;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,OAAO;;AAE7E,uCAAuC,IAAI;AAC3C;;AAEA;AACA;AACA;AACA,8CAA8C,MAAM;AACpD,gEAAgE,cAAc;AAC9E;;AAEA;AACA,oDAAoD,OAAO;AAC3D;AACA;;AAEA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA,6CAA6C,mBAAmB;AAChE;AACA;AACA;AACA,6CAA6C,kBAAkB;AAC/D;AACA;AACA;AACA,6CAA6C,sBAAsB;AACnE;AACA;AACA;AACA,6CAA6C,oEAAc,WAAW;AACtE;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,2CAA2C,yCAAyC;AACpF,6CAA6C,0BAA0B;AACvE;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,qCAAqC;AAC9C;AACA;AACA;AACA;AACA;AACA,iHAAiH,uBAAuB;AACxI;;AAEA,6GAA6G,qBAAqB;AAClI;;AAEA,+GAA+G,sBAAsB;AACrI;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,0BAA0B;AACrC;AACA;AACA;AACA,qCAAqC,MAAM,0CAA0C,MAAM;AAC3F;AACA;AACA,kDAAkD,KAAK;AACvD;AACA,yDAAyD,OAAO;AAChE,sDAAsD,kBAAkB;AACxE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA,4GAA4G,gBAAgB;AAC5H;AACA,kBAAkB;AAClB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEe,+BAA+B,2DAAiB;AAC/D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjMA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uBAAuB,2DAAiB;;AAEvD;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;;AAEe,8BAA8B,2DAAiB;AAC9D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;;AAEe,4BAA4B,2DAAiB;AAC5D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAqD;;AAErD;AACA,SAAS,8BAA8B;AACvC;AACA;AACA;AACA;AACA,iHAAiH,UAAU;AAC3H,6GAA6G,QAAQ;AACrH,iHAAiH,UAAU;AAC3H;AACA;AACA;AACA;AACA;;AAEe,uBAAuB,2DAAiB;AACvD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sBAAsB,2DAAiB;;AAEtD;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;;AAEe,0BAA0B,2DAAiB;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAqD;;AAE9C;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD,wCAAwC,cAAc;AACtD,wCAAwC,gBAAgB;AACxD;AACA;AACA;;AAEe,mBAAmB,2DAAiB;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAA;AAAqD;AACL;;AAEhD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sCAAsC,6DAAe;AACrD,+BAA+B,6DAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,kBAAkB;AAC5D;AACA;AACA;AACA,0CAA0C,oBAAoB,qDAAqD,sBAAsB;AACzI;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,wBAAwB,2DAAiB;AACxD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC3GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACO;AACP;AACmB;AACF;AACnB;AACK;AACI;;;AAG/D;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,IAAI,4DAAM,sCAAsC,4DAAc;AAC9D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,6DAAiB;AAC7C;;AAEA,wCAAwC,sEAAyB;AACjE;;AAEA,EAAE,4DAAM,iCAAiC,4DAAc;AACvD;;AAEe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AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,mDAAW;AAC3C,gCAAgC,qDAAa;AAC7C,gCAAgC,oDAAY;AAC5C,gCAAgC,uDAAe;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAWE;;;;;;;;;;;;;ACzEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWE;;;;;;;;;;;;;ACtDF;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEuD","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","import {createElement} from \"../utils/render\";\n\nexport default class AbstractComponent {\n  constructor() {\n    if (new.target === AbstractComponent) {\n      throw new Error(`Can't instantiate AbstractComponent, only concrete one.`);\n    }\n\n    this._element = null;\n  }\n\n  getTemplate() {\n    throw new Error(`Abstract method not implemented: getTemplate`);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createFilmCardsContainerTemplate = () => {\n  return (\n    `<div class=\"films-list__container\"></div>`\n  );\n};\n\nexport default class FilmCardContainer extends AbstractComponent {\n\n  getTemplate() {\n    return createFilmCardsContainerTemplate();\n  }\n}\n","import AbstractComponent from './abstract-component';\nimport {formatDuration} from '../utils/common';\n\nconst GENRE_MAIN = 0;\nconst MAX_DESCRIPTION_LENGTH = 140;\n\nconst createFilmCardTemplate = (film) => {\n  const {poster, title, rating, release, duration, genres, description, comments, isInWatchList, isWatched, isFavorite} = film;\n  const watchListButtonChecked = isInWatchList ? `film-card__controls-item--active` : ``;\n  const watchedButtonChecked = isWatched ? `film-card__controls-item--active` : ``;\n  const favoriteButtonChecked = isFavorite ? `film-card__controls-item--active` : ``;\n\n  return (\n    `<article class=\"film-card\">\n      <h3 class=\"film-card__title\">${title}</h3>\n      <p class=\"film-card__rating\">${rating}</p>\n      <p class=\"film-card__info\">\n        <span class=\"film-card__year\">${release.getFullYear()}</span>\n        <span class=\"film-card__duration\">${formatDuration(duration)}</span>\n        <span class=\"film-card__genre\">${genres[GENRE_MAIN]}</span>\n      </p>\n      <img src=\"./images/posters/${poster}\" alt=\"\" class=\"film-card__poster\">\n      <p class=\"film-card__description\">${description.length <= MAX_DESCRIPTION_LENGTH ?\n      description : description.substring(0, MAX_DESCRIPTION_LENGTH).concat(`…`)}</p>\n      <a class=\"film-card__comments\">${comments.length} comments</a>\n      <form class=\"film-card__controls\">\n        <button class=\"film-card__controls-item button film-card__controls-item--add-to-watchlist ${watchListButtonChecked}\">Add to watchlist</button>\n        <button class=\"film-card__controls-item button film-card__controls-item--mark-as-watched ${watchedButtonChecked}\">Mark as watched</button>\n        <button class=\"film-card__controls-item button film-card__controls-item--favorite ${favoriteButtonChecked}\">Mark as favorite</button>\n      </form>\n    </article>`\n  );\n};\n\nexport default class FilmCard extends AbstractComponent {\n  constructor(film) {\n    super();\n\n    this._film = film;\n  }\n\n  getTemplate() {\n    return createFilmCardTemplate(this._film);\n  }\n\n  setFilmCardClickHandler(handler) {\n    this.getElement().querySelector(`.film-card__poster`)\n    .addEventListener(`click`, handler);\n\n    this.getElement().querySelector(`.film-card__title`)\n    .addEventListener(`click`, handler);\n\n    this.getElement().querySelector(`.film-card__comments`)\n    .addEventListener(`click`, handler);\n  }\n}\n","import AbstractComponent from './abstract-component';\nimport {formatDuration} from '../utils/common';\n\nconst createFilmDetailsMarkup = (film) => {\n  const {poster, age, title, originalTitle, rating, director, writers, actors\n    , release, duration, country, genres, description} = film;\n  const getNumberOfGenresMarkup = () => {\n    let genresMarkup = ``;\n    for (let i = 0; i < genres.length; i++) {\n      genresMarkup = genresMarkup + `<span class=\"film-details__genre\">${genres[i]}</span> \\n`;\n    }\n    return genresMarkup;\n  };\n  return (\n    `<div class=\"film-details__info-wrap\">\n      <div class=\"film-details__poster\">\n        <img class=\"film-details__poster-img\" src=\"./images/posters/${poster}\" alt=\"\">\n\n        <p class=\"film-details__age\">${age}+</p>\n      </div>\n\n      <div class=\"film-details__info\">\n        <div class=\"film-details__info-head\">\n          <div class=\"film-details__title-wrap\">\n            <h3 class=\"film-details__title\">${title}</h3>\n            <p class=\"film-details__title-original\">Original: ${originalTitle}</p>\n          </div>\n\n          <div class=\"film-details__rating\">\n            <p class=\"film-details__total-rating\">${rating}</p>\n          </div>\n        </div>\n\n        <table class=\"film-details__table\">\n          <tbody><tr class=\"film-details__row\">\n            <td class=\"film-details__term\">Director</td>\n            <td class=\"film-details__cell\">${director}</td>\n          </tr>\n          <tr class=\"film-details__row\">\n            <td class=\"film-details__term\">Writers</td>\n            <td class=\"film-details__cell\">${writers.join(`, `)}</td>\n          </tr>\n          <tr class=\"film-details__row\">\n            <td class=\"film-details__term\">Actors</td>\n            <td class=\"film-details__cell\">${actors.join(`, `)}</td>\n          </tr>\n          <tr class=\"film-details__row\">\n            <td class=\"film-details__term\">Release Date</td>\n            <td class=\"film-details__cell\">${release.getFullYear()}</td>\n          </tr>\n          <tr class=\"film-details__row\">\n            <td class=\"film-details__term\">Runtime</td>\n            <td class=\"film-details__cell\">${formatDuration(duration)}</td>\n          </tr>\n          <tr class=\"film-details__row\">\n            <td class=\"film-details__term\">Country</td>\n            <td class=\"film-details__cell\">${country}</td>\n          </tr>\n          <tr class=\"film-details__row\">\n          <td class=\"film-details__term\">${genres.length === 1 ? `Genre` : `Genres`}</td>\n            <td class=\"film-details__cell\">${getNumberOfGenresMarkup()}</td>\n          </tr>\n        </tbody></table>\n\n        <p class=\"film-details__film-description\">\n          ${description}\n        </p>\n      </div>\n    </div>`\n  );\n};\n\nconst createFilmControlsMarkup = (film) => {\n  const {isInWatchList, isWatched, isFavorite} = film;\n  const watchListButtonChecked = isInWatchList ? `checked` : ``;\n  const watchedButtonChecked = isWatched ? `checked` : ``;\n  const favoriteButtonChecked = isFavorite ? `checked` : ``;\n  return (\n    `<section class=\"film-details__controls\">\n    <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watchlist\" name=\"watchlist\" ${watchListButtonChecked}>\n    <label for=\"watchlist\" class=\"film-details__control-label film-details__control-label--watchlist\">Add to watchlist</label>\n\n    <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watched\" name=\"watched\" ${watchedButtonChecked}>\n    <label for=\"watched\" class=\"film-details__control-label film-details__control-label--watched\">Already watched</label>\n\n    <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"favorite\" name=\"favorite\" ${favoriteButtonChecked}>\n    <label for=\"favorite\" class=\"film-details__control-label film-details__control-label--favorite\">Add to favorites</label>\n  </section>`\n  );\n};\n\nconst createCommentsMarkup = (comments) => {\n  return comments.map((comment) => {\n    const {emoji, text, author, date} = comment;\n    return (`\n      <li class=\"film-details__comment\">\n        <span class=\"film-details__comment-emoji\">\n          <img src=\"./images/emoji/${emoji}.png\" width=\"55\" height=\"55\" alt=\"emoji-${emoji}\">\n        </span>\n        <div>\n          <p class=\"film-details__comment-text\">${text}</p>\n          <p class=\"film-details__comment-info\">\n            <span class=\"film-details__comment-author\">${author}</span>\n            <span class=\"film-details__comment-day\">${date.getMinutes()}</span>\n            <button class=\"film-details__comment-delete\">Delete</button>\n          </p>\n        </div>\n      </li>\n    `);\n  }).join(`\\n`);\n};\n\nconst createNewCommentMarkup = () => {\n  return (\n    `<div class=\"film-details__new-comment\">\n    <div for=\"add-emoji\" class=\"film-details__add-emoji-label\">\n      <img src=\"images/emoji/smile.png\" width=\"55\" height=\"55\" alt=\"emoji-smile\">\n    </div>\n\n    <label class=\"film-details__comment-label\">\n      <textarea class=\"film-details__comment-input\" placeholder=\"Select reaction below and write comment here\" name=\"comment\">Great movie!</textarea>\n    </label>\n\n    <div class=\"film-details__emoji-list\">\n      <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-smile\" value=\"smile\" checked=\"\">\n      <label class=\"film-details__emoji-label\" for=\"emoji-smile\">\n        <img src=\"./images/emoji/smile.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n      </label>\n\n      <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-sleeping\" value=\"sleeping\">\n      <label class=\"film-details__emoji-label\" for=\"emoji-sleeping\">\n        <img src=\"./images/emoji/sleeping.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n      </label>\n\n      <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-puke\" value=\"puke\">\n      <label class=\"film-details__emoji-label\" for=\"emoji-puke\">\n        <img src=\"./images/emoji/puke.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n      </label>\n\n      <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-angry\" value=\"angry\">\n      <label class=\"film-details__emoji-label\" for=\"emoji-angry\">\n        <img src=\"./images/emoji/angry.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n      </label>\n    </div>\n  </div>`\n  );\n};\n\nconst createFilmDetailsPopupTemplate = (film) => {\n  const {comments} = film;\n  const filmDetailsMarkup = createFilmDetailsMarkup(film);\n  const filmConrolsMarkup = createFilmControlsMarkup(film);\n  const commentsMarkup = createCommentsMarkup(comments);\n  const newCommentMarkup = createNewCommentMarkup();\n  return (\n    `<section class=\"film-details\">\n       <form class=\"film-details__inner\" action=\"\" method=\"get\">\n         <div class=\"form-details__top-container\">\n           <div class=\"film-details__close\">\n             <button class=\"film-details__close-btn\" type=\"button\">close</button>\n           </div>\n           ${filmDetailsMarkup}\n           ${filmConrolsMarkup}\n         </div>\n         <div class=\"form-details__bottom-container\">\n           <section class=\"film-details__comments-wrap\">\n             <h3 class=\"film-details__comments-title\">Comments <span class=\"film-details__comments-count\">${comments.length}</span></h3>\n             <ul class=\"film-details__comments-list\">\n                ${commentsMarkup}\n             </ul>\n            ${newCommentMarkup}\n           </section>\n         </div>\n       </form>\n    </section>`\n  );\n};\n\nexport default class FilmDetailsPopup extends AbstractComponent {\n  constructor(film) {\n    super();\n\n    this._film = film;\n  }\n\n  getTemplate() {\n    return createFilmDetailsPopupTemplate(this._film);\n  }\n\n  setPopupCloseButtonClickHandler(handler) {\n    this.getElement().querySelector(`.film-details .film-details__close-btn`)\n    .addEventListener(`click`, handler);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createFilmListTemplate = () => {\n  return (\n    `<section class=\"films\">\n      <section class=\"films-list\">\n        <h2 class=\"films-list__title visually-hidden\">All movies. Upcoming</h2>\n      </section>\n    </section>`\n  );\n};\n\nexport default class FilmList extends AbstractComponent {\n\n  getTemplate() {\n    return createFilmListTemplate();\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createFooterStatisticTemplate = (moviesCount) => {\n  return (\n    `<section class=\"footer__statistics\">\n      <p>${moviesCount} movies inside</p>\n    </section>`\n  );\n};\n\nexport default class FooterStatistic extends AbstractComponent {\n  constructor(moviesCount) {\n    super();\n\n    this._moviesCount = moviesCount;\n  }\n\n  getTemplate() {\n    return createFooterStatisticTemplate(this._moviesCount);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createHeaderProfileTemplate = (profileRating) => {\n  let userRank = ``;\n  if (profileRating <= 0) {\n    userRank = ``;\n  } else if (profileRating > 1 && profileRating <= 10) {\n    userRank = `novice`;\n  } else if (profileRating > 10 && profileRating <= 20) {\n    userRank = `fan`;\n  } else {\n    userRank = `movie buff`;\n  }\n  return (\n    `<section class=\"header__profile profile\">\n      <p class=\"profile__rating\">${userRank}</p>\n      <img class=\"profile__avatar\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\n    </section>`\n  );\n};\n\nexport default class HeaderProfile extends AbstractComponent {\n  constructor(profileRating) {\n    super();\n\n    this._profileRating = profileRating;\n  }\n\n  getTemplate() {\n    return createHeaderProfileTemplate(this._profileRating);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createMainMenuTemplate = (watchStats) => {\n  const {watchlist, history, favorites} = watchStats;\n  return (\n    `<nav class=\"main-navigation\">\n      <div class=\"main-navigation__items\">\n        <a href=\"#all\" class=\"main-navigation__item main-navigation__item--active\">All movies</a>\n        <a href=\"#watchlist\" class=\"main-navigation__item\">Watchlist <span class=\"main-navigation__item-count\">${watchlist}</span></a>\n        <a href=\"#history\" class=\"main-navigation__item\">History <span class=\"main-navigation__item-count\">${history}</span></a>\n        <a href=\"#favorites\" class=\"main-navigation__item\">Favorites <span class=\"main-navigation__item-count\">${favorites}</span></a>\n      </div>\n      <a href=\"#stats\" class=\"main-navigation__additional\">Stats</a>\n    </nav>`\n  );\n};\n\nexport default class MainMenu extends AbstractComponent {\n  constructor(watchStats) {\n    super();\n\n    this._watchStats = watchStats;\n  }\n\n  getTemplate() {\n    return createMainMenuTemplate(this._watchStats);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst noFilmsTemplate = () => {\n  return (\n    `<section class=\"films-list\">\n      <h2 class=\"films-list__title\">There are no movies in our database</h2>\n    </section>`\n  );\n};\n\nexport default class NoFilms extends AbstractComponent {\n\n  getTemplate() {\n    return noFilmsTemplate();\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createShowMoreBtnTemplate = () => {\n  return (\n    `<button class=\"films-list__show-more\">Show more</button>`\n  );\n};\n\nexport default class ShowMoreBtn extends AbstractComponent {\n\n  getTemplate() {\n    return createShowMoreBtnTemplate();\n  }\n\n  setClickHandler(handler) {\n    this.getElement().addEventListener(`click`, handler);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nexport const SortType = {\n  DEFAULT: `default`,\n  DATE: `date`,\n  RATING: `rating`\n};\n\nconst createSortTemplate = () => {\n  return (\n    `<ul class=\"sort\">\n      <li><a href=\"#\" data-sort-type=\"${SortType.DEFAULT}\" class=\"sort__button sort__button--active\">Sort by default</a></li>\n      <li><a href=\"#\" data-sort-type=\"${SortType.DATE}\" class=\"sort__button\">Sort by date</a></li>\n      <li><a href=\"#\" data-sort-type=\"${SortType.RATING}\" class=\"sort__button\">Sort by rating</a></li>\n    </ul>`\n  );\n};\n\nexport default class Sort extends AbstractComponent {\n  constructor() {\n    super();\n\n    this._currenSortType = SortType.DEFAULT;\n  }\n\n  getTemplate() {\n    return createSortTemplate();\n  }\n\n  getSortType() {\n    return this._currenSortType;\n\n  }\n\n  setSortTypeChangeHandler(handler) {\n    console.log(this.getElement())\n    this.getElement().addEventListener(`click`, (evt) => {\n      evt.preventDefault();\n\n      if (evt.target.tagName !== `A`) {\n        return;\n      }\n\n      const sortType = evt.target.dataset.sortType;\n\n      if (this._currenSortType === sortType) {\n        return;\n      }\n\n      this._currenSortType = sortType;\n\n      handler(this._currenSortType);\n    });\n  }\n}\n","import AbstractComponent from './abstract-component';\nimport {MINUTES_IN_HOUR} from '../utils/consts';\n\nconst createRankMarkup = (profileRating) => {\n  let userRank = ``;\n  if (profileRating <= 0) {\n    return ``;\n  } else if (profileRating > 1 && profileRating <= 10) {\n    userRank = `novice`;\n  } else if (profileRating > 10 && profileRating <= 20) {\n    userRank = `fan`;\n  } else {\n    userRank = `movie buff`;\n  }\n  return (\n    `<p class=\"statistic__rank\">\n      Your rank\n      <img class=\"statistic__img\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\n      <span class=\"statistic__rank-label\">${userRank}</span>\n    </p>`\n  );\n};\n\nconst createStatisticTemplate = (films) => {\n  const watchedFilmsCount = films.reduce((count, film) => film.isWatched ? count + 1 : count, 0);\n  const rankMarkup = createRankMarkup(watchedFilmsCount);\n  const getTotalDuration = () => {\n    let result = {};\n    let duration = 0;\n    films.forEach((film) => {\n      duration = duration + film.duration;\n    });\n    const hours = parseInt(duration / MINUTES_IN_HOUR, 10);\n    const minutes = duration % MINUTES_IN_HOUR;\n    result = {\n      hours,\n      minutes\n    };\n    return result;\n  };\n  const totalDuration = getTotalDuration();\n  // const getTopGanre = () => {\n  //   const watchedFilms = [];\n  //   for (const film of films) {\n  //     if (film.isWatched) {\n  //       watchedFilms.push(film);\n  //     }\n  //   }\n  //   console.log(watchedFilms);\n  // };\n  // getTopGanre()\n\n  return (\n    `<section class=\"statistic\">\n      ${rankMarkup}\n    <form action=\"https://echo.htmlacademy.ru/\" method=\"get\" class=\"statistic__filters\">\n      <p class=\"statistic__filters-description\">Show stats:</p>\n\n      <input type=\"radio\" class=\"statistic__filters-input visually-hidden\" name=\"statistic-filter\" id=\"statistic-all-time\" value=\"all-time\" checked>\n      <label for=\"statistic-all-time\" class=\"statistic__filters-label\">All time</label>\n\n      <input type=\"radio\" class=\"statistic__filters-input visually-hidden\" name=\"statistic-filter\" id=\"statistic-today\" value=\"today\">\n      <label for=\"statistic-today\" class=\"statistic__filters-label\">Today</label>\n\n      <input type=\"radio\" class=\"statistic__filters-input visually-hidden\" name=\"statistic-filter\" id=\"statistic-week\" value=\"week\">\n      <label for=\"statistic-week\" class=\"statistic__filters-label\">Week</label>\n\n      <input type=\"radio\" class=\"statistic__filters-input visually-hidden\" name=\"statistic-filter\" id=\"statistic-month\" value=\"month\">\n      <label for=\"statistic-month\" class=\"statistic__filters-label\">Month</label>\n\n      <input type=\"radio\" class=\"statistic__filters-input visually-hidden\" name=\"statistic-filter\" id=\"statistic-year\" value=\"year\">\n      <label for=\"statistic-year\" class=\"statistic__filters-label\">Year</label>\n    </form>\n\n    <ul class=\"statistic__text-list\">\n      <li class=\"statistic__text-item\">\n        <h4 class=\"statistic__item-title\">You watched</h4>\n        <p class=\"statistic__item-text\">${watchedFilmsCount} <span class=\"statistic__item-description\">movies</span></p>\n      </li>\n      <li class=\"statistic__text-item\">\n        <h4 class=\"statistic__item-title\">Total duration</h4>\n        <p class=\"statistic__item-text\">${totalDuration.hours}<span class=\"statistic__item-description\">h</span> ${totalDuration.minutes} <span class=\"statistic__item-description\">m</span></p>\n      </li>\n      <li class=\"statistic__text-item\">\n        <h4 class=\"statistic__item-title\">Top genre</h4>\n        <p class=\"statistic__item-text\">Sci-Fi</p>\n      </li>\n    </ul>\n\n    <div class=\"statistic__chart-wrap\">\n      <canvas class=\"statistic__chart\" width=\"1000\"></canvas>\n    </div>\n\n  </section>`\n  );\n};\n\nexport default class Statistic extends AbstractComponent {\n  constructor(films) {\n    super();\n\n    this._films = films;\n  }\n\n  getTemplate() {\n    return createStatisticTemplate(this._films);\n  }\n}\n","import FilmCardComponent from '../components/film-card';\nimport ShowMoreBtnComponent from '../components/show-more-btn';\nimport FilmListComponent from '../components/film-list';\nimport FilmCardContainerComponent from '../components/film-card-container';\nimport FilmDetailsPopupComponent from '../components/film-details-popup';\nimport NoFilmsComponent from '../components/no-films';\nimport SortComponent, {SortType} from '../components/sort';\nimport {render, RenderPosition, remove} from '../utils/render';\n\n\nconst SHOWING_CARDS_COUNT_ON_START = 5;\nconst SHOWING_CARDS_COUNT_BY_BUTTON = 5;\n\nconst siteMain = document.querySelector(`.main`);\nconst siteBody = document.querySelector(`body`);\n\nconst renderFilmCard = (filmListElement, film) => {\n\n  const onFilmCardClick = () => {\n    render(siteBody, filmDetailsPopupComponent, RenderPosition.BEFOREEND);\n    document.addEventListener(`keydown`, onEscKeydown);\n  };\n\n  const onCloseButtonClick = () => {\n    document.querySelector(`body`).removeChild(filmDetailsPopupComponent.getElement());\n    document.removeEventListener(`keydown`, onEscKeydown);\n  };\n\n  const onEscKeydown = (evt) => {\n    const isEscape = evt.key === `Escape` || evt.key === `Esc`;\n\n    if (isEscape) {\n      document.querySelector(`body`).removeChild(filmDetailsPopupComponent.getElement());\n\n      document.removeEventListener(`keydown`, onEscKeydown);\n    }\n  };\n\n  const filmComponent = new FilmCardComponent(film);\n  filmComponent.setFilmCardClickHandler(onFilmCardClick);\n\n  const filmDetailsPopupComponent = new FilmDetailsPopupComponent(film);\n  filmDetailsPopupComponent.setPopupCloseButtonClickHandler(onCloseButtonClick);\n\n  render(filmListElement, filmComponent, RenderPosition.BEFOREEND);\n};\n\nexport default class PageController {\n  constructor(container) {\n    this._container = container;\n\n    this._sortComponent = new SortComponent();\n    this._noFilmsComponent = new NoFilmsComponent();\n    this._filmListComponent = new FilmListComponent();\n    this._filmCardContainerComponent = new FilmCardContainerComponent();\n    this._showMoreBtnComponent = new ShowMoreBtnComponent();\n  }\n\n  render(films) {\n\n    const renderShowMoreBtn = () => {\n      if (showingFilmCount >= films.length) {\n        return;\n      }\n\n      render(filmListElement, this._showMoreBtnComponent, `beforeend`);\n\n      this._showMoreBtnComponent.setClickHandler(() => {\n        const prevFilmCount = showingFilmsCount;\n        showingFilmsCount = showingFilmsCount + SHOWING_CARDS_COUNT_BY_BUTTON;\n\n        films.slice(prevFilmCount, showingFilmsCount)\n          .forEach((film) => renderFilmCard(mainFilmsListContainer, film));\n        if (showingFilmsCount >= films.length) {\n          remove(this._showMoreBtnComponent);\n        }\n      });\n    };\n    const container = this._container;\n\n    const filmsContainer = siteMain.querySelector(`.films`);\n\n    let showingFilmCount = SHOWING_CARDS_COUNT_ON_START;\n\n    if (films.length === 0) {\n      filmsContainer.removeChild(filmsContainer.querySelector(`.films-list`));\n      render(filmsContainer, this._noFilmsComponent, RenderPosition.BEFOREEND);\n      return;\n    }\n\n    render(container.getElement(), this._sortComponent, RenderPosition.BEFOREEND);\n    render(container.getElement(), this._filmListComponent, RenderPosition.BEFOREEND);\n\n    const filmListElement = siteMain.querySelector(`.films-list`);\n    render(filmListElement, this._filmCardContainerComponent, RenderPosition.BEFOREEND);\n    const mainFilmsListContainer = filmListElement.querySelector(`.films-list__container`);\n\n    let showingFilmsCount = SHOWING_CARDS_COUNT_ON_START;\n    films\n      .slice(0, showingFilmsCount)\n      .forEach((film) => {\n        renderFilmCard(mainFilmsListContainer, film);\n      });\n\n    renderShowMoreBtn();\n\n    // render(filmListElement, showMoreButtonComponent, `beforeend`);\n\n    // showMoreButtonComponent.setClickHandler(() => {\n    //   const prevFilmCount = showingFilmsCount;\n    //   showingFilmsCount = showingFilmsCount + SHOWING_CARDS_COUNT_BY_BUTTON;\n\n    //   films.slice(prevFilmCount, showingFilmsCount)\n    //     .forEach((film) => renderFilmCard(mainFilmsListContainer, film));\n    //   if (showingFilmsCount >= films.length) {\n    //     remove(showMoreButtonComponent);\n    //   }\n    // });\n\n    this._sortComponent.setSortTypeChangeHandler((sortType) => {\n      showingFilmsCount = SHOWING_CARDS_COUNT_ON_START;\n      mainFilmsListContainer.innerHTML = ``;\n\n      films\n        .slice(0, showingFilmsCount)\n        .forEach((film) => {\n          renderFilmCard(mainFilmsListContainer, film);\n        });\n      renderShowMoreBtn();\n    });\n  }\n}\n","import HeaderProfileComponent from './components/header-profile';\nimport MainMenuComponent from './components/main-menu';\nimport StatisticComponent from './components/statistic';\nimport SortComponent from './components/sort';\nimport FilmListComponent from './components/film-list';\nimport FilmCardContainerComponent from './components/film-card-container';\nimport FooterStatisticComponent from './components/footer-statistic';\n\nimport PageController from './controllers/page-controller';\n\nimport {generateFilmCards} from './mock/film-card';\nimport {render, RenderPosition} from './utils/render';\n\n\nconst CARDS_COUNT = 10;\n\nconst filmCards = generateFilmCards(CARDS_COUNT);\n\nconst siteMain = document.querySelector(`.main`);\n\nconst renderHeader = () => {\n  const siteHeader = document.querySelector(`.header`);\n\n  const profileRating = filmCards.reduce((count, film) => film.isWatched ? count + 1 : count, 0);\n  render(siteHeader, new HeaderProfileComponent(profileRating), RenderPosition.BEFOREEND);\n};\nrenderHeader();\n\nconst renderMainMenu = () => {\n  const getWatchStats = () => {\n    return {\n      watchlist: filmCards.reduce((count, film) => film.isInWatchList ? count + 1 : count, 0),\n      history: filmCards.reduce((count, film) => film.isWatched ? count + 1 : count, 0),\n      favorites: filmCards.reduce((count, film) => film.isFavorite ? count + 1 : count, 0)\n    };\n  };\n  const watchStats = getWatchStats();\n  render(siteMain, new MainMenuComponent(watchStats), RenderPosition.BEFOREEND);\n};\nrenderMainMenu();\n\nconst renderStatistic = (films) => {\n  const mainMenu = siteMain.querySelector(`.main-navigation`);\n\n  render(mainMenu, new StatisticComponent(films), RenderPosition.AFTEREND);\n};\nrenderStatistic(filmCards);\n\nrender(siteMain, new SortComponent(), RenderPosition.BEFOREEND);\n\nrender(siteMain, new FilmListComponent(), RenderPosition.BEFOREEND);\nconst siteFooter = document.querySelector(`.footer`);\nrender(siteFooter, new FooterStatisticComponent(filmCards.length), RenderPosition.BEFOREEND);\n\nconst filmsCardContanerComponent = new FilmCardContainerComponent();\n\nconst pageController = new PageController(filmsCardContanerComponent);\npageController.render(filmCards);\n\n\n// const renderExtraFilms = () => {\n\n//   const extraFilmsList = siteMain.querySelectorAll(`.films-list--extra`);\n//   const [topRatedFilmsList, mostCommentedFilmsList] = extraFilmsList;\n\n//   render(topRatedFilmsList, new FilmCardContainerComponent().getElement(), RenderPosition.BEFOREEND);\n//   render(mostCommentedFilmsList, new FilmCardContainerComponent().getElement(), RenderPosition.BEFOREEND);\n\n//   const topRatedFilmsListContainer = topRatedFilmsList.querySelector(`.films-list__container`);\n//   const mostCommentedFilmsListContainer = mostCommentedFilmsList.querySelector(`.films-list__container`);\n\n//   const getTopRaitedFilmCadrs = () => {\n//     const result = filmCards.slice().sort((a, b) => {\n//       return b.rating - a.rating;\n//     }\n//     );\n//     return result;\n//   };\n\n//   const topRatedFilmCards = getTopRaitedFilmCadrs();\n\n//   const getMostCommentedFilmCards = () => {\n//     const result = filmCards.slice().sort((a, b) => {\n//       return b.comments.length - a.comments.length;\n//     }\n//     );\n//     return result;\n//   };\n\n//   const mostCommentedFilmCards = getMostCommentedFilmCards();\n//   for (let i = 0; i < CARDS_COUNT_EXTRA; i++) {\n//     render(topRatedFilmsListContainer, new FilmCardComponent(topRatedFilmCards[i]).getElement(), RenderPosition.BEFOREEND);\n//     render(mostCommentedFilmsListContainer, new FilmCardComponent(mostCommentedFilmCards[i]).getElement(), RenderPosition.BEFOREEND);\n//   }\n// };\n// renderExtraFilms();\n\n","import {getRandomItem, getRandomDate} from '../utils/common';\nimport {DUMMY_TEXTS} from '../utils/consts';\n\nconst COMMENT_AUTHORS = [`Jonh Doe`, `Bob Dode`, `Eman North`, `Hooly Gun`, `Scan Done`, `Tom Banle`, `Jakob Mitov`];\nconst EMOJIS = [`angry`, `puke`, `sleeping`, `smile`];\nconst Comment = {\n  YEAR_MIN: 2014,\n  YEAR_MAX: 2020\n};\n\nconst generateComment = () => {\n  return {\n    emoji: getRandomItem(EMOJIS),\n    text: getRandomItem(DUMMY_TEXTS),\n    author: getRandomItem(COMMENT_AUTHORS),\n    date: getRandomDate(Comment.YEAR_MIN, Comment.YEAR_MAX)\n  };\n};\n\nconst generateComments = (count) => {\n  return new Array(count)\n    .fill(``)\n    .map(generateComment);\n};\n\nexport {generateComments};\n","import {\n  GENRES,\n  POSTERS,\n  TITLES,\n  DUMMY_TEXTS\n} from '../utils/consts';\nimport {\n  getRandomItem,\n  getRandomItems,\n  getRandomIntegerNumber,\n  getRandomBoolean,\n  getRandomDate,\n  getRandomArray\n} from '../utils/common';\n\nimport {generateComments} from './comment';\n\nconst Film = {\n  RELEASE_YEAR_MIN: 1960,\n  RELEASE_YEAR_MAX: 2020,\n  COMMENTS_MIN: 0,\n  COMMENTS_MAX: 5,\n  DESCRIPTION_SENTENCES_MIN: 1,\n  DESCRIPTION_SENTENCES_MAX: 5,\n  GENRES_MIN: 1,\n  GENRES_MAX: 4,\n  ACTORS_MIN: 2,\n  ACTORS_MAX: 5,\n  DURATION_MIN: 30,\n  DURATION_MAX: 180,\n  RATING_MIN: 1,\n  RATING_MAX: 10,\n  WRITERS_MIN: 1,\n  WRITERS_MAX: 3,\n  AGE_MIN: 0,\n  AGE_MAX: 21\n};\n\nconst getRandomDescription = (description) => {\n  return getRandomArray(description, Film.DESCRIPTION_SENTENCES_MIN, Film.DESCRIPTION_SENTENCES_MAX).join(` `);\n};\n\nconst getRandomRating = () => {\n  const randomNumber = (Film.RATING_MIN + Math.random() * (Film.RATING_MAX - Film.RATING_MIN)) * 10;\n  const rating = Math.round(randomNumber) / 10;\n  return rating;\n};\n\nconst getCommentsCount = () => {\n  return getRandomIntegerNumber(Film.COMMENTS_MIN, Film.COMMENTS_MAX);\n};\nconst directors = [`Woody Allen`, `Pedro Almodóvar`, `Rick Alverson`, `Robert Altman`];\nconst writers = [`Jane Austen`, `William Blake`, `Geoffrey Chaucer`, `Charles Dickens `, `John Donne`];\nconst actors = [`Akshay Kumar`, `Shah Rukh Khan`, `Amitabh Bachchan`];\nconst countries = [`China`, `USA`, `Germany`, `Russia`, `Poland`];\n\nconst generateFilmCard = () => {\n\n  return {\n    poster: getRandomItem(POSTERS),\n    age: getRandomIntegerNumber(Film.AGE_MIN, Film.AGE_MAX),\n    title: getRandomItem(TITLES),\n    originalTitle: getRandomItem(TITLES),\n    rating: getRandomRating(),\n    duration: getRandomIntegerNumber(Film.DURATION_MIN, Film.DURATION_MAX),\n    genres: getRandomItems(GENRES),\n    description: getRandomDescription(DUMMY_TEXTS),\n    director: getRandomItem(directors),\n    writers: getRandomItems(writers),\n    actors: getRandomItems(actors),\n    comments: generateComments(getCommentsCount()),\n    release: getRandomDate(Film.RELEASE_YEAR_MIN, Film.RELEASE_YEAR_MAX),\n    country: getRandomItem(countries),\n    isInWatchList: getRandomBoolean(),\n    isWatched: getRandomBoolean(),\n    isFavorite: getRandomBoolean(),\n  };\n};\n\nconst generateFilmCards = (count) => {\n  return new Array(count)\n  .fill(``)\n  .map(generateFilmCard);\n};\n\nexport {generateFilmCard, generateFilmCards};\n\n","import {MONTH_NAMES, DAYS_IN_MONTH, HOURS_IN_DAY, MINUTES_IN_HOUR} from './consts';\n\nconst formatDuration = (duration) => {\n  const hours = parseInt(duration / MINUTES_IN_HOUR, 10);\n  const minutes = duration % MINUTES_IN_HOUR;\n  return `${hours}h ${minutes}m`;\n};\n\nconst getRandomItem = (arr) => {\n  return arr[Math.floor(Math.random() * arr.length)];\n};\n\nconst getRandomIntegerNumber = (min, max) => {\n  return min + Math.floor(Math.random() * (max - min));\n};\n\nconst getRandomItems = (arr) => {\n  let result = [];\n  const randomValue = (() => {\n    return Math.ceil(Math.random() * arr.length);\n  })();\n  for (let k = 0; k < arr.length; k++) {\n    if (!Math.round(Math.random())) {\n      result.push(arr[k]);\n    }\n    if (result.length >= randomValue) {\n      break;\n    }\n  }\n  return result;\n};\n\nconst getRandomBoolean = () => {\n  return Math.random() > 0.5;\n};\n\nconst getRandomDate = (minYear, maxYear) => {\n  const date = new Date(\n      getRandomIntegerNumber(minYear, maxYear),\n      getRandomIntegerNumber(0, MONTH_NAMES.length),\n      getRandomIntegerNumber(0, DAYS_IN_MONTH),\n      getRandomIntegerNumber(0, HOURS_IN_DAY),\n      getRandomIntegerNumber(0, MINUTES_IN_HOUR)\n  );\n  return date;\n};\n\nconst getShuffledArray = (array) => {\n  let j;\n  let temp;\n  for (let i = array.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    temp = array[j];\n    array[j] = array[i];\n    array[i] = temp;\n  }\n  return array;\n};\n\nconst getRandomArray = (array, minLength, maxLength) => {\n  return getShuffledArray(array)\n  .slice(0, getRandomIntegerNumber(minLength, maxLength));\n};\n\nexport {\n  formatDuration,\n  getRandomIntegerNumber,\n  getRandomBoolean,\n  getRandomItem,\n  getRandomItems,\n  getRandomDate,\n  getShuffledArray,\n  getRandomArray,\n};\n","const MONTH_NAMES = [\n  `January`,\n  `February`,\n  `March`,\n  `April`,\n  `May`,\n  `June`,\n  `July`,\n  `August`,\n  `September`,\n  `October`,\n  `November`,\n  `December`,\n];\n\nconst DUMMY_TEXTS = [\n  `Lorem ipsum dolor sit amet, consectetur adipiscing elit.`,\n  `Cras aliquet varius magna, non porta ligula feugiat eget.`,\n  `Fusce tristique felis at fermentum pharetra.`,\n  `Aliquam id orci ut lectus varius viverra.`,\n  `Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.`,\n  `Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum.`,\n  `Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui.`,\n  `Sed sed nisi sed augue convallis suscipit in sed felis.`,\n  `Aliquam erat volutpat.`,\n  `Nunc fermentum tortor ac porta dapibus.`,\n  `In rutrum ac purus sit amet tempus.`,\n];\n\nconst MINUTES_IN_HOUR = 60;\n\nconst HOURS_IN_DAY = 24;\n\nconst DAYS_IN_MONTH = 30;\n\nconst GENRES = [`Action`, `Adventure`, `Animation`, `Biography`, `Comedy`, `Crime`, `Drama`, `Family`, `Fantasy`];\nconst POSTERS = [`made-for-each-other.png`, `popeye-meets-sinbad.png`,\n  `sagebrush-trail.jpg`, `santa-claus-conquers-the-martians.jpg`, `the-dance-of-life.jpg`,\n  `the-great-flamarion.jpg`, `the-man-with-the-golden-arm.jpg`];\nconst TITLES = [`Made for each other`, `Popeye meets Sinbad`, `Sagenbrush trail`,\n  `Santa Claus conquers the Martians`, `The dance of life`,\n  `The great Flamarion`, `The man with the golden arm`];\n\nconst SMILES = [`angry.png`, `puke.png`, `sleeping.png`, `smile.png`];\n\nexport {\n  GENRES,\n  DUMMY_TEXTS,\n  POSTERS, TITLES,\n  SMILES,\n  MONTH_NAMES,\n  MINUTES_IN_HOUR,\n  HOURS_IN_DAY,\n  DAYS_IN_MONTH\n};\n","const createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n\n  return newElement.firstChild;\n};\n\nconst remove = (component) => {\n  component.getElement().remove();\n  component.removeElement();\n};\n\nconst RenderPosition = {\n  AFTERBEGIN: `afterbegin`,\n  BEFOREEND: `beforeend`,\n  AFTEREND: `after`\n};\n\nconst render = (container, component, place) => {\n  switch (place) {\n    case RenderPosition.AFTERBEGIN:\n      container.prepend(component.getElement());\n      break;\n    case RenderPosition.BEFOREEND:\n      container.append(component.getElement());\n      break;\n    case RenderPosition.AFTEREND:\n      container.after(component.getElement());\n  }\n};\n\nexport {createElement, remove, RenderPosition, render};\n"],"sourceRoot":""}