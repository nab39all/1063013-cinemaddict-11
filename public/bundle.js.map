{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/comments.js","webpack:///./src/components/film-card-container.js","webpack:///./src/components/film-card.js","webpack:///./src/components/film-controls.js","webpack:///./src/components/film-details-popup.js","webpack:///./src/components/film-details.js","webpack:///./src/components/film-list.js","webpack:///./src/components/footer-statistic.js","webpack:///./src/components/header-profile.js","webpack:///./src/components/main-menu.js","webpack:///./src/components/new-comment.js","webpack:///./src/components/show-more-btn.js","webpack:///./src/components/sort.js","webpack:///./src/consts.js","webpack:///./src/main.js","webpack:///./src/mock/comment.js","webpack:///./src/mock/film-card.js","webpack:///./src/utils.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA,mCAAmC,MAAM;AACzC;AACA;AACA,gDAAgD,KAAK;AACrD;AACA,uDAAuD,OAAO;AAC9D,oDAAoD,kBAAkB;AACtE;AACA;AACA;AACA;AACA;AACA;;AAE+B;;;;;;;;;;;;;ACnB/B;AAAA;AAAO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAwC;AACxC;AACA;;AAEO;AACP,SAAS,8GAA8G;AACvH;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,MAAM;AAC3C,qCAAqC,OAAO;AAC5C;AACA,wCAAwC,sBAAsB;AAC9D,4CAA4C,6DAAc,WAAW;AACrE,yCAAyC,mBAAmB;AAC5D;AACA,mCAAmC,OAAO;AAC1C,0CAA0C;AAC1C,iFAAiF;AACjF,uCAAuC,gBAAgB;AACvD;AACA,oGAAoG,uBAAuB;AAC3H,mGAAmG,qBAAqB;AACxH,4FAA4F,sBAAsB;AAClH;AACA;AACA;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAO;AACP,SAAS,qCAAqC;AAC9C;AACA;AACA;AACA;AACA;AACA,iHAAiH,uBAAuB;AACxI;;AAEA,6GAA6G,qBAAqB;AAClI;;AAEA,+GAA+G,sBAAsB;AACrI;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBA;AAAA;AAAO;AACP,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G,gBAAgB;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAwC;;AAExC;AACA,SAAS;AACT,sDAAsD;AACtD;AACA;AACA,mBAAmB,mBAAmB;AACtC,yEAAyE,UAAU;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,OAAO;;AAE7E,uCAAuC,IAAI;AAC3C;;AAEA;AACA;AACA;AACA,8CAA8C,MAAM;AACpD,gEAAgE,cAAc;AAC9E;;AAEA;AACA,oDAAoD,OAAO;AAC3D;AACA;;AAEA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA,6CAA6C,mBAAmB;AAChE;AACA;AACA;AACA,6CAA6C,kBAAkB;AAC/D;AACA;AACA;AACA,6CAA6C,sBAAsB;AACnE;AACA;AACA;AACA,6CAA6C,6DAAc,WAAW;AACtE;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,2CAA2C,yCAAyC;AACpF,6CAA6C,0BAA0B;AACvE;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEmC;;;;;;;;;;;;;ACvEnC;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAO;AACP;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAO;AACP,SAAS,8BAA8B;AACvC;AACA;AACA;AACA;AACA,iHAAiH,UAAU;AAC3H,6GAA6G,QAAQ;AACrH,iHAAiH,UAAU;AAC3H;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWE;;;;;;;;;;;;;ACtDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AACV;AACT;AACS;AACO;AACP;AACoB;AACN;;AAEG;AACX;AACE;AACP;AACG;;AAEf;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,0EAAiB;;AAEnC;AACA;;AAEA;AACA,mBAAmB,8FAA2B;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oFAAsB;AACvC,iBAAiB,2EAAkB;AACnC,iBAAiB,oFAAsB;;AAEvC;AACA,kBAAkB,wGAAgC;AAClD;;AAEA;AACA,eAAe,uBAAuB;AACtC,iCAAiC,oFAAsB;AACvD;;AAEA,kBAAkB,2FAAyB;;AAE3C;AACA;AACA,0BAA0B,wGAAgC;AAC1D,+BAA+B,wGAAgC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC,qCAAqC,oFAAsB;AAC3D,0CAA0C,oFAAsB;;AAEhE;AACA;AACA,mBAAmB,kGAA6B;;AAEhD;;AAEA;AACA;AACA;;AAEA;AACA,0DAA0D,oFAAsB;AAChF;AACA;AACA;AACA,CAAC;;AAED;;AAEA,qBAAqB,qGAA8B;;AAEnD;AACA;AACA;AACA;;AAEA,yCAAyC,0FAAyB;AAClE,yCAAyC,6FAA0B;AACnE,qCAAqC,yFAAwB;;AAE7D,4EAA4E,sFAAqB;AACjG;;AAEA;;;;;;;;;;;;;;;ACpHA;AAAA;AAAA;AAAA;AAGkB;AACoB;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,4DAAa;AACxB,UAAU,4DAAa,CAAC,mDAAW;AACnC,YAAY,4DAAa;AACzB,UAAU,4DAAa;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAE0B;;;;;;;;;;;;;AC5B1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAKmB;AAQD;;AAEyB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,6DAAc;AACvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,qEAAsB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,YAAY,4DAAa,CAAC,+CAAO;AACjC,SAAS,qEAAsB;AAC/B,WAAW,4DAAa,CAAC,8CAAM;AAC/B,mBAAmB,4DAAa,CAAC,8CAAM;AACvC;AACA,cAAc,qEAAsB;AACpC,YAAY,6DAAc,CAAC,8CAAM;AACjC,sCAAsC,mDAAW;AACjD,cAAc,4DAAa;AAC3B,aAAa,6DAAc;AAC3B,YAAY,6DAAc;AAC1B,cAAc,iEAAgB;AAC9B,aAAa,4DAAa;AAC1B,aAAa,4DAAa;AAC1B,mBAAmB,+DAAgB;AACnC,eAAe,+DAAgB;AAC/B,gBAAgB,+DAAgB;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAE6C;;;;;;;;;;;;;;ACrF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;;AAEnF;AACA,oCAAoC,uDAAe;AACnD,6BAA6B,uDAAe;AAC5C,YAAY,MAAM,IAAI,QAAQ;AAC9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,mDAAW;AAC3C,gCAAgC,qDAAa;AAC7C,gCAAgC,oDAAY;AAC5C,gCAAgC,uDAAe;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAUE","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","const createCommentTemplate = (comment) => {\n  const {emoji, text, author, date} = comment;\n  return (\n    `<li class=\"film-details__comment\">\n      <span class=\"film-details__comment-emoji\">\n        <img src=\"./images/emoji/${emoji}.png\" width=\"55\" height=\"55\" alt=\"emoji-smile\">\n      </span>\n      <div>\n        <p class=\"film-details__comment-text\">${text}</p>\n        <p class=\"film-details__comment-info\">\n          <span class=\"film-details__comment-author\">${author}</span>\n          <span class=\"film-details__comment-day\">${date.getMinutes()}</span>\n          <button class=\"film-details__comment-delete\">Delete</button>\n        </p>\n      </div>\n    </li>`\n  );\n};\n\nexport {createCommentTemplate};\n","export const createFilmCardsContainerTemplate = () => {\n  return (\n    `<div class=\"films-list__container\"></div>`\n  );\n};\n","import {formatDuration} from '../utils';\nconst GENRE_MAIN = 0;\nconst MAX_DESCRIPTION_LENGTH = 140;\n\nexport const createFilmCardTemplate = (film) => {\n  const {poster, title, rating, release, duration, genres, description, comments, isInWatchList, isWatched, isFavorite} = film;\n  const watchListButtonChecked = isInWatchList ? `film-card__controls-item--active` : ``;\n  const watchedButtonChecked = isWatched ? `film-card__controls-item--active` : ``;\n  const favoriteButtonChecked = isFavorite ? `film-card__controls-item--active` : ``;\n\n  return (\n    `<article class=\"film-card\">\n      <h3 class=\"film-card__title\">${title}</h3>\n      <p class=\"film-card__rating\">${rating}</p>\n      <p class=\"film-card__info\">\n        <span class=\"film-card__year\">${release.getFullYear()}</span>\n        <span class=\"film-card__duration\">${formatDuration(duration)}</span>\n        <span class=\"film-card__genre\">${genres[GENRE_MAIN]}</span>\n      </p>\n      <img src=\"./images/posters/${poster}\" alt=\"\" class=\"film-card__poster\">\n      <p class=\"film-card__description\">${description.length <= MAX_DESCRIPTION_LENGTH ?\n      description : description.substring(0, MAX_DESCRIPTION_LENGTH).concat(`…`)}</p>\n      <a class=\"film-card__comments\">${comments.length} comments</a>\n      <form class=\"film-card__controls\">\n        <button class=\"film-card__controls-item button film-card__controls-item--add-to-watchlist ${watchListButtonChecked}\">Add to watchlist</button>\n        <button class=\"film-card__controls-item button film-card__controls-item--mark-as-watched ${watchedButtonChecked}\">Mark as watched</button>\n        <button class=\"film-card__controls-item button film-card__controls-item--favorite ${favoriteButtonChecked}\">Mark as favorite</button>\n      </form>\n    </article>`\n  );\n};\n","export const createFilmControlsTemplate = (film) => {\n  const {isInWatchList, isWatched, isFavorite} = film;\n  const watchListButtonChecked = isInWatchList ? `checked` : ``;\n  const watchedButtonChecked = isWatched ? `checked` : ``;\n  const favoriteButtonChecked = isFavorite ? `checked` : ``;\n  return (\n    `<section class=\"film-details__controls\">\n    <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watchlist\" name=\"watchlist\" ${watchListButtonChecked}>\n    <label for=\"watchlist\" class=\"film-details__control-label film-details__control-label--watchlist\">Add to watchlist</label>\n\n    <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watched\" name=\"watched\" ${watchedButtonChecked}>\n    <label for=\"watched\" class=\"film-details__control-label film-details__control-label--watched\">Already watched</label>\n\n    <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"favorite\" name=\"favorite\" ${favoriteButtonChecked}>\n    <label for=\"favorite\" class=\"film-details__control-label film-details__control-label--favorite\">Add to favorites</label>\n  </section>`\n  );\n};\n\n\n","export const createFilmDetailsPopUpTemplate = (film) => {\n  const {comments} = film;\n  return (\n    `<section class=\"film-details\">\n       <form class=\"film-details__inner\" action=\"\" method=\"get\">\n         <div class=\"form-details__top-container\">\n           <div class=\"film-details__close\">\n             <button class=\"film-details__close-btn\" type=\"button\">close</button>\n           </div>\n         </div>\n         <div class=\"form-details__bottom-container\">\n           <section class=\"film-details__comments-wrap\">\n             <h3 class=\"film-details__comments-title\">Comments <span class=\"film-details__comments-count\">${comments.length}</span></h3>\n             <ul class=\"film-details__comments-list\">\n             </ul>\n           </section>\n         </div>\n       </form>\n    </section>`\n  );\n};\n","import {formatDuration} from '../utils';\n\nconst createFilmDetailsTemplate = (film) => {\n  const {poster, age, title, originalTitle, rating, director, writers, actors\n    , release, duration, country, genres, description} = film;\n  const getNumberOfGenresMarkup = () => {\n    let genresMarkup = ``;\n    for (let i = 0; i < genres.length; i++) {\n      genresMarkup = genresMarkup + `<span class=\"film-details__genre\">${genres[i]}</span> \\n`;\n    }\n    return genresMarkup;\n  };\n  return (\n    `<div class=\"film-details__info-wrap\">\n      <div class=\"film-details__poster\">\n        <img class=\"film-details__poster-img\" src=\"./images/posters/${poster}\" alt=\"\">\n\n        <p class=\"film-details__age\">${age}+</p>\n      </div>\n\n      <div class=\"film-details__info\">\n        <div class=\"film-details__info-head\">\n          <div class=\"film-details__title-wrap\">\n            <h3 class=\"film-details__title\">${title}</h3>\n            <p class=\"film-details__title-original\">Original: ${originalTitle}</p>\n          </div>\n\n          <div class=\"film-details__rating\">\n            <p class=\"film-details__total-rating\">${rating}</p>\n          </div>\n        </div>\n\n        <table class=\"film-details__table\">\n          <tbody><tr class=\"film-details__row\">\n            <td class=\"film-details__term\">Director</td>\n            <td class=\"film-details__cell\">${director}</td>\n          </tr>\n          <tr class=\"film-details__row\">\n            <td class=\"film-details__term\">Writers</td>\n            <td class=\"film-details__cell\">${writers.join(`, `)}</td>\n          </tr>\n          <tr class=\"film-details__row\">\n            <td class=\"film-details__term\">Actors</td>\n            <td class=\"film-details__cell\">${actors.join(`, `)}</td>\n          </tr>\n          <tr class=\"film-details__row\">\n            <td class=\"film-details__term\">Release Date</td>\n            <td class=\"film-details__cell\">${release.getFullYear()}</td>\n          </tr>\n          <tr class=\"film-details__row\">\n            <td class=\"film-details__term\">Runtime</td>\n            <td class=\"film-details__cell\">${formatDuration(duration)}</td>\n          </tr>\n          <tr class=\"film-details__row\">\n            <td class=\"film-details__term\">Country</td>\n            <td class=\"film-details__cell\">${country}</td>\n          </tr>\n          <tr class=\"film-details__row\">\n          <td class=\"film-details__term\">${genres.length === 1 ? `Genre` : `Genres`}</td>\n            <td class=\"film-details__cell\">${getNumberOfGenresMarkup()}</td>\n          </tr>\n        </tbody></table>\n\n        <p class=\"film-details__film-description\">\n          ${description}\n        </p>\n      </div>\n    </div>`\n  );\n};\n\nexport {createFilmDetailsTemplate};\n","export const createFilmListTemplate = () => {\n  return (\n    `<section class=\"films\">\n      <section class=\"films-list\">\n        <h2 class=\"films-list__title visually-hidden\">All movies. Upcoming</h2>\n      </section>\n\n      <section class=\"films-list--extra\">\n        <h2 class=\"films-list__title\">Top rated</h2>\n      </section>\n      <section class=\"films-list--extra\">\n        <h2 class=\"films-list__title\">Most commented</h2>\n      </section>\n    </section>`\n  );\n};\n","export const createFooterStatisticTemplate = (moviesCount) => {\n  return (\n    `<section class=\"footer__statistics\">\n      <p>${moviesCount} movies inside</p>\n    </section>`\n  );\n};\n","export const createHeaderProfileTemplate = (profileRating) => {\n  let userRank = ``;\n  if (profileRating <= 0) {\n    userRank = ``;\n  } else if (profileRating > 1 && profileRating <= 10) {\n    userRank = `novice`;\n  } else if (profileRating > 10 && profileRating <= 20) {\n    userRank = `fan`;\n  } else {\n    userRank = `movie buff`;\n  }\n  return (\n    `<section class=\"header__profile profile\">\n      <p class=\"profile__rating\">${userRank}</p>\n      <img class=\"profile__avatar\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\n    </section>`\n  );\n};\n","export const createMainMenuTemplate = (watchStats) => {\n  const {watchlist, history, favorites} = watchStats;\n  return (\n    `<nav class=\"main-navigation\">\n      <div class=\"main-navigation__items\">\n        <a href=\"#all\" class=\"main-navigation__item main-navigation__item--active\">All movies</a>\n        <a href=\"#watchlist\" class=\"main-navigation__item\">Watchlist <span class=\"main-navigation__item-count\">${watchlist}</span></a>\n        <a href=\"#history\" class=\"main-navigation__item\">History <span class=\"main-navigation__item-count\">${history}</span></a>\n        <a href=\"#favorites\" class=\"main-navigation__item\">Favorites <span class=\"main-navigation__item-count\">${favorites}</span></a>\n      </div>\n      <a href=\"#stats\" class=\"main-navigation__additional\">Stats</a>\n    </nav>`\n  );\n};\n","export const createNewCommentTemplate = () => {\n  return (\n    `<div class=\"film-details__new-comment\">\n    <div for=\"add-emoji\" class=\"film-details__add-emoji-label\">\n      <img src=\"images/emoji/smile.png\" width=\"55\" height=\"55\" alt=\"emoji-smile\">\n    </div>\n\n    <label class=\"film-details__comment-label\">\n      <textarea class=\"film-details__comment-input\" placeholder=\"Select reaction below and write comment here\" name=\"comment\">Great movie!</textarea>\n    </label>\n\n    <div class=\"film-details__emoji-list\">\n      <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-smile\" value=\"smile\" checked=\"\">\n      <label class=\"film-details__emoji-label\" for=\"emoji-smile\">\n        <img src=\"./images/emoji/smile.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n      </label>\n\n      <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-sleeping\" value=\"sleeping\">\n      <label class=\"film-details__emoji-label\" for=\"emoji-sleeping\">\n        <img src=\"./images/emoji/sleeping.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n      </label>\n\n      <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-puke\" value=\"puke\">\n      <label class=\"film-details__emoji-label\" for=\"emoji-puke\">\n        <img src=\"./images/emoji/puke.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n      </label>\n\n      <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-angry\" value=\"angry\">\n      <label class=\"film-details__emoji-label\" for=\"emoji-angry\">\n        <img src=\"./images/emoji/angry.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n      </label>\n    </div>\n  </div>`\n  );\n};\n","export const createShowMoreBtnTemplate = () => {\n  return (\n    `<button class=\"films-list__show-more\">Show more</button>`\n  );\n};\n","export const createSortTemplate = () => {\n  return (\n    `<ul class=\"sort\">\n      <li><a href=\"#\" class=\"sort__button sort__button--active\">Sort by default</a></li>\n      <li><a href=\"#\" class=\"sort__button\">Sort by date</a></li>\n      <li><a href=\"#\" class=\"sort__button\">Sort by rating</a></li>\n    </ul>`\n  );\n};\n","const MONTH_NAMES = [\n  `January`,\n  `February`,\n  `March`,\n  `April`,\n  `May`,\n  `June`,\n  `July`,\n  `August`,\n  `September`,\n  `October`,\n  `November`,\n  `December`,\n];\n\nconst DUMMY_TEXTS = [\n  `Lorem ipsum dolor sit amet, consectetur adipiscing elit.`,\n  `Cras aliquet varius magna, non porta ligula feugiat eget.`,\n  `Fusce tristique felis at fermentum pharetra.`,\n  `Aliquam id orci ut lectus varius viverra.`,\n  `Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.`,\n  `Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum.`,\n  `Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui.`,\n  `Sed sed nisi sed augue convallis suscipit in sed felis.`,\n  `Aliquam erat volutpat.`,\n  `Nunc fermentum tortor ac porta dapibus.`,\n  `In rutrum ac purus sit amet tempus.`,\n];\n\nconst MINUTES_IN_HOUR = 60;\n\nconst HOURS_IN_DAY = 24;\n\nconst DAYS_IN_MONTH = 30;\n\nconst GENRES = [`Action`, `Adventure`, `Animation`, `Biography`, `Comedy`, `Crime`, `Drama`, `Family`, `Fantasy`];\nconst POSTERS = [`made-for-each-other.png`, `popeye-meets-sinbad.png`,\n  `sagebrush-trail.jpg`, `santa-claus-conquers-the-martians.jpg`, `the-dance-of-life.jpg`,\n  `the-great-flamarion.jpg`, `the-man-with-the-golden-arm.jpg`];\nconst TITLES = [`Made for each other`, `Popeye meets Sinbad`, `Sagenbrush trail`,\n  `Santa Claus conquers the Martians`, `The dance of life`,\n  `The great Flamarion`, `The man with the golden arm`];\n\nconst SMILES = [`angry.png`, `puke.png`, `sleeping.png`, `smile.png`];\n\nexport {\n  GENRES,\n  DUMMY_TEXTS,\n  POSTERS, TITLES,\n  SMILES,\n  MONTH_NAMES,\n  MINUTES_IN_HOUR,\n  HOURS_IN_DAY,\n  DAYS_IN_MONTH\n};\n","import {createHeaderProfileTemplate} from './components/header-profile';\nimport {createMainMenuTemplate} from './components/main-menu';\nimport {createSortTemplate} from './components/sort';\nimport {createFilmCardTemplate} from './components/film-card';\nimport {createShowMoreBtnTemplate} from './components/show-more-btn';\nimport {createFilmListTemplate} from './components/film-list';\nimport {createFilmCardsContainerTemplate} from './components/film-card-container';\nimport {createFooterStatisticTemplate} from './components/footer-statistic';\n\nimport {createFilmDetailsPopUpTemplate} from './components/film-details-popup';\nimport {createFilmDetailsTemplate} from './components/film-details';\nimport {createFilmControlsTemplate} from './components/film-controls';\nimport {createCommentTemplate} from \"./components/comments.js\";\nimport {createNewCommentTemplate} from './components/new-comment';\n\nimport {generateFilmCards} from './mock/film-card';\n\nconst CARDS_COUNT = 23;\nconst CARDS_COUNT_EXTRA = 2;\nconst SHOWING_CARDS_COUNT_ON_START = 5;\nconst SHOWING_CARDS_COUNT_BY_BUTTON = 5;\n\nconst render = (container, template, place = `beforeend`) => {\n  container.insertAdjacentHTML(place, template);\n};\n\nconst filmCards = generateFilmCards(CARDS_COUNT);\n\nconst siteMain = document.querySelector(`.main`);\nconst siteHeader = document.querySelector(`.header`);\n\nconst profileRating = filmCards.reduce((count, film) => film.isWatched ? count + 1 : count, 0);\nrender(siteHeader, createHeaderProfileTemplate(profileRating));\n\nconst getWatchStats = () => {\n  return {\n    watchlist: filmCards.reduce((count, film) => film.isInWatchList ? count + 1 : count, 0),\n    history: filmCards.reduce((count, film) => film.isWatched ? count + 1 : count, 0),\n    favorites: filmCards.reduce((count, film) => film.isFavorite ? count + 1 : count, 0)\n  };\n};\nconst watchStats = getWatchStats();\nrender(siteMain, createMainMenuTemplate(watchStats));\nrender(siteMain, createSortTemplate());\nrender(siteMain, createFilmListTemplate());\n\nconst filmsList = siteMain.querySelector(`.films-list`);\nrender(filmsList, createFilmCardsContainerTemplate());\nconst mainFilmsListContainer = filmsList.querySelector(`.films-list__container`);\n\nlet showingCardsCount = SHOWING_CARDS_COUNT_ON_START;\nfor (let i = 0; i < showingCardsCount; i++) {\n  render(mainFilmsListContainer, createFilmCardTemplate(filmCards[i]));\n}\n\nrender(filmsList, createShowMoreBtnTemplate());\n\nconst extraFilmsList = siteMain.querySelectorAll(`.films-list--extra`);\nconst [topRatedFilmsList, mostCommentedFilmsList] = extraFilmsList;\nrender(topRatedFilmsList, createFilmCardsContainerTemplate());\nrender(mostCommentedFilmsList, createFilmCardsContainerTemplate());\nconst topRatedFilmsListContainer = topRatedFilmsList.querySelector(`.films-list__container`);\nconst mostCommentedFilmsListContainer = mostCommentedFilmsList.querySelector(`.films-list__container`);\nconst getTopRaitedFilmCadrs = () => {\n  const result = filmCards.slice().sort((a, b) => {\n    return b.rating - a.rating;\n  }\n  );\n  return result;\n};\nconst topRatedFilmCards = getTopRaitedFilmCadrs();\nconst getMostCommentedFilmCards = () => {\n  const result = filmCards.slice().sort((a, b) => {\n    return b.comments.length - a.comments.length;\n  }\n  );\n  return result;\n};\nconst mostCommentedFilmCards = getMostCommentedFilmCards();\nfor (let i = 0; i < CARDS_COUNT_EXTRA; i++) {\n  render(topRatedFilmsListContainer, createFilmCardTemplate(topRatedFilmCards[i]));\n  render(mostCommentedFilmsListContainer, createFilmCardTemplate(mostCommentedFilmCards[i]));\n\n}\nconst siteFooter = document.querySelector(`.footer`);\nrender(siteFooter, createFooterStatisticTemplate(filmCards.length));\n\nconst loadMoreButton = filmsList.querySelector(`.films-list__show-more`);\n\nloadMoreButton.addEventListener(`click`, () => {\n  const prevTasksCount = showingCardsCount;\n  showingCardsCount = showingCardsCount + SHOWING_CARDS_COUNT_BY_BUTTON;\n\n  filmCards.slice(prevTasksCount, showingCardsCount)\n    .forEach((filmCard) => render(mainFilmsListContainer, createFilmCardTemplate(filmCard), `beforeend`));\n  if (showingCardsCount >= filmCards.length) {\n    loadMoreButton.remove();\n  }\n});\n\nconst renderFilmDetails = (film) => {\n\n  render(siteFooter, createFilmDetailsPopUpTemplate(film), `afterend`);\n\n  const filmDetailsElement = document.querySelector(`.film-details`);\n  const filmDetailsTopContainerElement = filmDetailsElement.querySelector(`.form-details__top-container`);\n  const filmDetailsCommentsElement = filmDetailsElement.querySelector(`.film-details__comments-wrap`);\n  const filmDetailsCommentsListElement = filmDetailsCommentsElement.querySelector(`.film-details__comments-list`);\n\n  render(filmDetailsTopContainerElement, createFilmDetailsTemplate(film));\n  render(filmDetailsTopContainerElement, createFilmControlsTemplate(film));\n  render(filmDetailsCommentsElement, createNewCommentTemplate());\n\n  film.comments.forEach((comment) => render(filmDetailsCommentsListElement, createCommentTemplate(comment)));\n};\n\nrenderFilmDetails(filmCards[0]);\n\n\n","import {\n  getRandomItem,\n  getRandomDate\n} from \"../utils\";\nimport {DUMMY_TEXTS} from '../consts';\n\nconst COMMENT_AUTHORS = [`Jonh Doe`, `Bob Dode`, `Eman North`, `Hooly Gun`, `Scan Done`, `Tom Banle`, `Jakob Mitov`];\nconst EMOJIS = [`angry`, `puke`, `sleeping`, `smile`];\nconst Comment = {\n  YEAR_MIN: 2014,\n  YEAR_MAX: 2020\n};\n\nconst generateComment = () => {\n  return {\n    emoji: getRandomItem(EMOJIS),\n    text: getRandomItem(DUMMY_TEXTS),\n    author: getRandomItem(COMMENT_AUTHORS),\n    date: getRandomDate(Comment.YEAR_MIN, Comment.YEAR_MAX)\n  };\n};\n\nconst generateComments = (count) => {\n  return new Array(count)\n    .fill(``)\n    .map(generateComment);\n};\n\nexport {generateComments};\n","import {\n  GENRES,\n  POSTERS,\n  TITLES,\n  DUMMY_TEXTS\n} from '../consts';\nimport {\n  getRandomItem,\n  getRandomItems,\n  getRandomIntegerNumber,\n  getRandomBoolean,\n  getRandomDate,\n  getRandomArray\n} from '../utils';\n\nimport {generateComments} from './comment';\n\nconst Film = {\n  RELEASE_YEAR_MIN: 1960,\n  RELEASE_YEAR_MAX: 2020,\n  COMMENTS_MIN: 0,\n  COMMENTS_MAX: 5,\n  DESCRIPTION_SENTENCES_MIN: 1,\n  DESCRIPTION_SENTENCES_MAX: 5,\n  GENRES_MIN: 1,\n  GENRES_MAX: 4,\n  ACTORS_MIN: 2,\n  ACTORS_MAX: 5,\n  DURATION_MIN: 30,\n  DURATION_MAX: 180,\n  RATING_MIN: 1,\n  RATING_MAX: 10,\n  WRITERS_MIN: 1,\n  WRITERS_MAX: 3,\n  AGE_MIN: 0,\n  AGE_MAX: 21\n};\n\nconst getRandomDescription = (description) => {\n  return getRandomArray(description, Film.DESCRIPTION_SENTENCES_MIN, Film.DESCRIPTION_SENTENCES_MAX).join(` `);\n};\n\nconst getRandomRating = () => {\n  const randomNumber = (Film.RATING_MIN + Math.random() * (Film.RATING_MAX - Film.RATING_MIN)) * 10;\n  const rating = Math.round(randomNumber) / 10;\n  return rating;\n};\n\nconst getCommentsCount = () => {\n  return getRandomIntegerNumber(Film.COMMENTS_MIN, Film.COMMENTS_MAX);\n};\nconst directors = [`Woody Allen`, `Pedro Almodóvar`, `Rick Alverson`, `Robert Altman`];\nconst writers = [`Jane Austen`, `William Blake`, `Geoffrey Chaucer`, `Charles Dickens `, `John Donne`];\nconst actors = [`Akshay Kumar`, `Shah Rukh Khan`, `Amitabh Bachchan`];\nconst countries = [`China`, `USA`, `Germany`, `Russia`, `Poland`];\n\nconst generateFilmCard = () => {\n\n  return {\n    poster: getRandomItem(POSTERS),\n    age: getRandomIntegerNumber(Film.AGE_MIN, Film.AGE_MAX),\n    title: getRandomItem(TITLES),\n    originalTitle: getRandomItem(TITLES),\n    rating: getRandomRating(),\n    duration: getRandomIntegerNumber(Film.DURATION_MIN, Film.DURATION_MAX),\n    genres: getRandomItems(GENRES),\n    description: getRandomDescription(DUMMY_TEXTS),\n    director: getRandomItem(directors),\n    writers: getRandomItems(writers),\n    actors: getRandomItems(actors),\n    comments: generateComments(getCommentsCount()),\n    release: getRandomDate(Film.RELEASE_YEAR_MIN, Film.RELEASE_YEAR_MAX),\n    country: getRandomItem(countries),\n    isInWatchList: getRandomBoolean(),\n    isWatched: getRandomBoolean(),\n    isFavorite: getRandomBoolean(),\n  };\n};\n\nconst generateFilmCards = (count) => {\n  return new Array(count)\n  .fill(``)\n  .map(generateFilmCard);\n};\n\nexport {generateFilmCard, generateFilmCards};\n\n","import {MONTH_NAMES, DAYS_IN_MONTH, HOURS_IN_DAY, MINUTES_IN_HOUR} from './consts';\n\nconst formatDuration = (duration) => {\n  const hours = parseInt(duration / MINUTES_IN_HOUR, 10);\n  const minutes = duration % MINUTES_IN_HOUR;\n  return `${hours}h ${minutes}m`;\n};\n\nconst getRandomItem = (arr) => {\n  return arr[Math.floor(Math.random() * arr.length)];\n};\n\nconst getRandomIntegerNumber = (min, max) => {\n  return min + Math.floor(Math.random() * (max - min));\n};\n\nconst getRandomItems = (arr) => {\n  let result = [];\n  const randomValue = (() => {\n    return Math.ceil(Math.random() * arr.length);\n  })();\n  for (let k = 0; k < arr.length; k++) {\n    if (!Math.round(Math.random())) {\n      result.push(arr[k]);\n    }\n    if (result.length >= randomValue) {\n      break;\n    }\n  }\n  return result;\n};\n\nconst getRandomBoolean = () => {\n  return Math.random() > 0.5;\n};\n\nconst getRandomDate = (minYear, maxYear) => {\n  const date = new Date(\n      getRandomIntegerNumber(minYear, maxYear),\n      getRandomIntegerNumber(0, MONTH_NAMES.length),\n      getRandomIntegerNumber(0, DAYS_IN_MONTH),\n      getRandomIntegerNumber(0, HOURS_IN_DAY),\n      getRandomIntegerNumber(0, MINUTES_IN_HOUR)\n  );\n  return date;\n};\n\nconst getShuffledArray = (array) => {\n  let j;\n  let temp;\n  for (let i = array.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    temp = array[j];\n    array[j] = array[i];\n    array[i] = temp;\n  }\n  return array;\n};\n\nconst getRandomArray = (array, minLength, maxLength) => {\n  return getShuffledArray(array)\n  .slice(0, getRandomIntegerNumber(minLength, maxLength));\n};\nexport {\n  formatDuration,\n  getRandomIntegerNumber,\n  getRandomBoolean,\n  getRandomItem,\n  getRandomItems,\n  getRandomDate,\n  getShuffledArray,\n  getRandomArray\n};\n"],"sourceRoot":""}